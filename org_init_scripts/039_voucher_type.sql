create type typ_base_voucher_type as enum (
    'CONTRA', 'PAYMENT', 'RECEIPT', 'JOURNAL', 'SALE', 'CREDIT_NOTE', 'PURCHASE', 'DEBIT_NOTE', 'SALE_QUOTATION', 'STOCK_JOURNAL',
    'STOCK_ADJUSTMENT', 'STOCK_DEDUCTION', 'STOCK_ADDITION', 'MATERIAL_CONVERSION', 'MANUFACTURING_JOURNAL', 'MEMO', 'WASTAGE',
    'GOODS_INWARD_NOTE', 'GIFT_VOUCHER','PERSONAL_USE_PURCHASE','CUSTOMER_ADVANCE');
--##
create table if not exists voucher_type
(
    id          int                   not null GENERATED BY default as identity (start with 101 increment by 1) primary key,
    name        text                  not null
        constraint voucher_type_name_min_length check (char_length(trim(name)) > 0),
    prefix      text
        constraint voucher_type_prefix_invalid check (prefix ~ '^[A-Z]+$' and char_length(prefix) between 2 and 3),
    sequence_id int references voucher_type,
    is_default  boolean               not null default false,
    base_type   typ_base_voucher_type not null,
    config      json                  not null,
    approval    json,
    members     jsonb,
    created_at  timestamp             not null default current_timestamp,
    updated_at  timestamp             not null default current_timestamp
);
--##
create trigger sync_voucher_type_updated_at
    before update
    on voucher_type
    for each row
execute procedure sync_updated_at();