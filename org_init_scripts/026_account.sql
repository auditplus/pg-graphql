create table if not exists account
(
    id                       int       not null generated BY default as identity (start with 101 increment by 1) primary key,
    name                     text      not null,
    account_type_id          int       not null,
    account_type_name        text      not null,
    contact_type             text      not null,
    hide                     boolean   not null default false,
    is_default               boolean   not null default false,
    alias_name               text,
    short_name               text,
    gst_type                 text,
    cheque_in_favour_of      text,
    description              text,
    base_account_types       text[]    not null,
    gst_reg_type             text,
    gst_location_id          text,
    gst_no                   text,
    gst_is_exempted          boolean,
    gst_exempted_desc        text,
    sac_code                 text,
    bill_wise_detail         boolean,
    transaction_enabled      boolean            default false,
    is_commission_discounted boolean            default false,
    commission               float,
    due_based_on             text,
    due_days                 int,
    credit_limit             float,
    pan_no                   text,
    aadhar_no                text,
    mobile                   text,
    alternate_mobile         text,
    telephone                text,
    email                    text,
    contact_person           text,
    address                  text,
    city                     text,
    pincode                  text,
    category1                int[],
    category2                int[],
    category3                int[],
    category4                int[],
    category5                int[],
    state_id                 text,
    country_id               text,
    bank_beneficiary_id      int,
    agent_id                 int references account,
    commission_account_id    int references account,
    gst_tax_id               text,
    tds_nature_of_payment_id int,
    tds_deductee_type_id     text,
    delivery_address         jsonb,
    enable_loyalty_point     boolean,
    loyalty_point            float,
    tags                     int[],
    created_at               timestamp not null default current_timestamp,
    updated_at               timestamp not null default current_timestamp,
    constraint name_min_length check (char_length(trim(name)) > 0),
    constraint pan_no_invalid check (pan_no ~ '^[a-zA-Z]{5}[0-9]{4}[a-zA-Z]$'),
    constraint aadhar_no_invalid check (aadhar_no ~ '^[2-9][0-9]{3}[0-9]{4}[0-9]{4}$'),
    constraint gst_no_invalid check (check_gst_no(gst_no)),
    constraint gst_reg_type_invalid check (check_gst_reg_type(gst_reg_type)),
    constraint due_based_on_invalid check (check_due_based_on(due_based_on)),
    constraint contact_type_invalid check (check_contact_type(contact_type)),
    constraint base_account_types_invalid check (check_base_account_types(base_account_types))
);
--##
create function before_account()
    returns trigger as
$$
declare
    is_allow_account bool := true;
begin
    select allow_account, base_types, name
    into is_allow_account, new.base_account_types, new.account_type_name
    from account_type
    where id = new.account_type_id;
    if not new.transaction_enabled then
        if exists(select * from account_daily_summary where account_id = new.id) then
            raise exception 'Transaction found';
        end if;
    end if;
    if not is_allow_account then
        raise exception 'can not create/update account under account_type of %', new.account_type_name;
    end if;
    new.updated_at = current_timestamp;
    return new;
end;
$$ language plpgsql security definer;
--##
create trigger sync_account
    before insert or update
    on account
    for each row
    when (not new.is_default)
execute procedure before_account();